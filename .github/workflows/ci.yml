name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: 17
          cache: 'maven'
      - name: Checkstyle Coverage
        run: mvn -B checkstyle:check

  liberica:
    strategy:
      matrix:
        java: [ '17', '18', '21' ]
    name: jdk-${{ matrix.java }}-liberica
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Compile
        run: mvn -B clean compile -Dspring.profiles.active=ci
      - name: Test
        run: mvn -B clean test -Dspring.profiles.active=ci

  temurin:
    strategy:
      matrix:
        java: [ '17', '18', '21' ]
    name: jdk-${{ matrix.java }}-temurin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Compile
        run: mvn -B clean compile -Dspring.profiles.active=ci
      - name: Test
        run: mvn -B clean test -Dspring.profiles.active=ci

  build:
    runs-on: ubuntu-latest
    needs: [liberica, temurin]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
          cache: 'maven'
      - name: Capture project version
        run: echo PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version --quiet -DforceStdout) >> $GITHUB_ENV
      - name: Package
        run: mvn -B clean package -DskipTests -Dspring.profiles.active=ci
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/medical-center-api:${{ env.PROJECT_VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/medical-center-api:latest